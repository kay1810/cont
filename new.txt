To create a simple one-page web application using Java with Maven, which can be built as both a JAR and a WAR file, and configured to run on a Tomcat server, you can follow these steps:

1. Set Up Your Maven Project
Create the Project Structure

You can use Maven's archetype:generate to generate a basic structure:

bash
Copy code
mvn archetype:generate -DgroupId=com.example -DartifactId=simple-webapp -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false
This command generates a basic Maven web application structure under the simple-webapp directory.

Update pom.xml

Navigate to your project directory and open the pom.xml file. You'll need to make several modifications:

xml
Copy code
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/POM/4.0.0">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>simple-webapp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <tomcat.version>9.0.73</tomcat.version>
    </properties>

    <dependencies>
        <!-- Servlet API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSP API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.3</version>
            <scope>provided</scope>
        </dependency>
        <!-- JSTL -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin to package WAR files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>

            <!-- Plugin to package JAR files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
This pom.xml is set up to create a WAR file, and it includes dependencies for servlet and JSP. You will also be able to build a JAR file using a Maven profile.

Create the Web Application Files

src/main/webapp/index.jsp

Create a simple JSP file at src/main/webapp/index.jsp:

jsp
Copy code
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Simple Web App</title>
</head>
<body>
    <h1>Welcome to the Simple Web App!</h1>
</body>
</html>
src/main/webapp/WEB-INF/web.xml

Create a basic web.xml at src/main/webapp/WEB-INF/web.xml:

xml
Copy code
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <servlet>
        <servlet-name>default</servlet-name>
        <jsp-file>/index.jsp</jsp-file>
    </servlet>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
Build and Package Your Application

To build the WAR file:

bash
Copy code
mvn clean package
To build the JAR file, activate the JAR profile:

bash
Copy code
mvn clean package -Pjar
Configure Tomcat

Make sure Tomcat is running on port 8090.
Deploy the WAR file to Tomcat's webapps directory. You can copy the generated simple-webapp-1.0-SNAPSHOT.war from the target directory to TOMCAT_HOME/webapps.
Run and Test

Start Tomcat if itâ€™s not already running.
Open a browser and go to http://localhost:8090/simple-webapp-1.0-SNAPSHOT/ to view your web app.
Summary
WAR Deployment: Tomcat will automatically deploy the WAR file if you place it in the webapps directory.
JAR Deployment: The JAR profile is provided for flexibility; however, note that traditional Java web apps are usually deployed as WAR files.
This setup will allow you to deploy your web application as a WAR file on Tomcat. If you need to run it as a standalone JAR, consider using Spring Boot or similar frameworks that support embedded servers.



